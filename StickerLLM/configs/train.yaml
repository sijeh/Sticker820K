# @package _global_

# specify here default configuration
# order of defaults determines the order in which configs override each other
defaults:
  - data: emoji.yaml
  - model: fromage.yaml
  - tokenizer: chatglm_v2.yaml
  - callbacks: default.yaml
  - logger: many_loggers.yaml # set logger here or use command line (e.g. `python train.py logger=tensorboard`)
  - trainer: gpu.yaml
  - paths: default.yaml
  - extras: default.yaml
  - hydra: default.yaml

  # experiment configs allow for version control of specific hyperparameters
  # e.g. best hyperparameters for given model and datamodule
  # - experiment: null

  # config for hyperparameter optimization
  - hparams_search: null

  # optional local config for machine/user specific settings
  # it's optional since it doesn't need to exist and is excluded from version control
  - optional local: default.yaml

  # debugging config (enable through command line, e.g. `python train.py debug=default)
  - debug: null
  - _self_


optimizer:
  _target_: torch.optim.AdamW
  _convert_: object
  lr: 0.0003
  betas: [0.9,0.95]
  weight_decay: 1.0e-2
  eps: 1.0e-5

scheduler:
  _target_: src.utils.optim.WarmupCosineStepSchedule
  warmup_steps: 100
  total_steps: null


train:
  concat_captions_prob: 0.5
  cap_loss_scale: 1.0
  ret_loss_scale: 1.0
  contrastive_loss_scale: 1.0
  grad_accumulate_batches: 1
  gradient_clip_val: 1.0
  sche_step_size: 10

# task name, determines output directory path
task_name: "chatglm"
# task_name: "chatYuan_t5-700m_cn-clip-vit-b"

# tags to help you identify your experiments
# you can overwrite this in experiment configs
# overwrite from command line with `python train.py tags="[first_tag, second_tag]"`
# appending lists from command line is currently not supported :(
# https://github.com/facebookresearch/hydra/issues/1547
tags: ["dev"]

# set False to skip model training
# train: True

# evaluate on test set, using best model weights achieved during training
# lightning chooses best weights based on the metric specified in checkpoint callback
# test: True

# simply provide checkpoint path to resume training
# ckpt_path: null

# seed for random number generators in pytorch, numpy and python.random
seed: 123


restore_token: ???
restore_dir: ${paths.log_dir}/${task_name}/restore/${restore_token}